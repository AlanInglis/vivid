% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vivi.R
\name{vivi}
\alias{vivi}
\title{vivi}
\usage{
vivi(
  data,
  fit,
  response,
  gridSize = 10,
  importanceType = NULL,
  nmax = 500,
  reorder = TRUE,
  class = 1,
  predictFun = NULL,
  ...
)
}
\arguments{
\item{data}{Data frame used for fit.}

\item{fit}{A supervised machine learning model, which understands condvis2::CVpredict}

\item{response}{The name of the response for the fit.}

\item{gridSize}{The size of the grid for evaluating the predictions.}

\item{importanceType}{passed to vividImportance.}

\item{nmax}{Maximum number of data rows to consider.}

\item{reorder}{If TRUE (default) uses DendSer to reorder the matrix of interactions and variable importances.}

\item{class}{Category for classification, a factor level, or a number indicating which factor level.}

\item{predictFun}{Function of (fit, data) to extract numeric predictions from fit. Uses condvis2::CVpredict by default, which works for many fit classes.}
}
\value{
A matrix of values, of class vivid.
}
\description{
Creates a matrix displaying variable importance on the diagonal
and variable interaction on the off-diagonal.
}
\examples{
aq <- data.frame(airquality)
aq <- na.omit(airquality)
f <- lm(Ozone ~ ., data = aq)
plot(vivi(fit = f, data = aq, response = "Ozone")) # as expected all interactions are zero
\dontrun{
# Run an mlr ranger model:
library(mlr3)
library(mlr3learners)
library(ranger)
aq <- na.omit(airquality)
aq_Task <- TaskRegr$new(id = "airQ", backend = aq, target = "Ozone")
aq_lrn <- lrn("regr.ranger", importance = "permutation")
aq_fit <- aq_lrn$train(aq_Task)

m <- vivi(fit = aq_fit, data = aq, response = "Ozone")
plot(m, type = "heatMap")
}
\dontrun{
library(ranger)
rf <- ranger(Species ~ ., data = iris)
plot(vivi(fit = rf, data = iris, response = "Species"))
rf <- ranger(Species ~ ., data = iris, importance = "impurity")
plot(vivi(fit = rf, data = iris, response = "Species"))
}
}
