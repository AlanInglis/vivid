% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vividNetwork.R
\name{plotNetwork}
\alias{plotNetwork}
\title{vividNetwork}
\usage{
plotNetwork(
  mat,
  model,
  thresholdValue = 0,
  label,
  fitlimsInt = NULL,
  fitlimsImp = NULL,
  intPal = rev(sequential_hcl(palette = "Blues 3", n = 11)),
  impPal = rev(sequential_hcl(palette = "Reds 3", n = 11)),
  labelNudge = 0.05,
  layout = "circle",
  cluster = F,
  clusterType = cluster_optimal,
  clusterLayout = layout_with_fr,
  ...
)
}
\arguments{
\item{mat}{A matrix of values to be plotted. Either added by the user or created using the prepFunc() function.}

\item{thresholdValue}{A value chosen by the user which will show all the edges with weights (i.e., the interacions) above that value. For example, if thresholdValue = 0.2, then only the the interacions greater than 0.2 will be displayed.}

\item{label}{If label = TRUE the numerical value for the interaction strength will be displayed.}

\item{intPal}{A colorspace colour palette to display the interaction values.}

\item{impPal}{A colorspace colour palette to display the importance values.}

\item{labelNudge}{A value, set by the user, to determine the y_postioning of the variables names. A higher value will postion the label farther above the nodes.}

\item{layout}{Determines the shape, or layout, of the plotted graph.}

\item{cluster}{If cluster = TRUE, then the data is clustered in groups.}

\item{clusterType}{= Network-based clustering. Any of the appropriate cluster types from the igraph package are allowed.}

\item{clusterLayout}{= Determines the shape, or layout, of the clustered plotted graph.}

\item{...}{Not currently implemented.}
}
\value{
A newtwork style plot displaying interaction strength between variables on the edges and variable importance on the nodes.
}
\description{
@description Create a Network style plot displaying Variable
and Variable Interaction.
}
\examples{
library(ranger)
aq <- na.omit(airquality)
rF <- ranger(Ozone ~ ., data = aq, importance = "permutation")
myMat <- vivi(fit = rF, data = aq, response = "Ozone")
plot(myMat, type = "network")

# Plotting Function -------------------------------------------------------
}
